{
  "hash": "c2f79507cf533b3e69cf17f9bc290ad4",
  "result": {
    "markdown": "---\ntitle: \"BCB 520 - The Final Portfolio Post\"\nsubtitle: \"Hsp90\"\nformat:\n  html:\n    toc: false\n    echo: true\nauthor: \"Erick Rios\"\ndate: \"2023-05-03\"\ncategories: [Portfolio, DataViz, Network, Observable, Assignment]\nimage: \"yeastbud.png\"\ndescription: \"Research\"\ncode-fold: true\ncode-tools: true\n---\n\n\n# The Preamble\n\nThe focus of my research is the study of Hsp90 molecular chaperone. Over the decades we come to realize this chaperone sits as a major hub of protein-protein interactions (CITE GOPINATH) in which it regulates the folding, activity, and degradation of its clients.\n\nThe current study expands the proteomic analysis previously done by us (CITE GENETICS PAPER), here we use quantitative proteomic analysis to compare extracts from yeast expressing wild-type yeast Hsp90 to nine different mutants. Our results demonstrate that the mutants elicit varied proteomic responses, even though the cells were harvested at temperatures that do not significantly affect growth. Overall, these results suggest:\n\n1.  It is possible to selectively inhibit Hsp90 function *in vivo*, and\n\n2.  Identifies **cellular processes** and/or likely **clients** that may be differentially affected by Hsc82 mutation.\n\n# Data\n\nData source:\n\n1.  Main data used in this analysis are the results of Data Independent Acquisition Mass Spectrometry (DIA-MS) experiments, a technique for quantitative proteomics. This is the crux of our study. For brevity, the data has been pre-filtered for significant hits of interest for analysis.\n\n2.  Supporting data/information publicly available on *Saccharomyces Genome Database (SGD)* (MAKE LINK)\n\n-   List of currently known protein **physical** interactors of Hsp90 (Both Hsc82 and Hsp82 isoforms)\n-   List of currently known protein **genetic** interactors of Hsp90 (Both Hsc82 and Hsp82 isoforms)\n-   Results GO term analysis using GO Slim Mapper\n\n3.  Supporting data/information publicly available on\n\n-   Physical protein attributes such as molecular weight, hydrophobicity, etc.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load in our data\nproteomic <- read.csv(\"trimmed_proteomic_Data.csv\")\n```\n:::\n\n\nData Dictionary\n\n\n::: {.cell}\n\n:::\n\n\n# Visualization\n\n## Figure 1: Basic static 'network'\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(igraph)\n```\n:::\n\n\n### NODES\n\nSince our objective is to construct a protein interaction network, intuitively our nodes will be our significant hits found in our study. However, we must also include our experimental variables, in this case single point mutations in the Hsp90 chaperone, this will help promote separation/clustering between nodes later when we apply our measurements from DIA-MS.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualize 350 nodes corresponding to the significant hits in our data\nnodes <- unique(c(proteomic$contrast, proteomic$Gene))\n\ng <- make_empty_graph(directed = FALSE)\ng <- add_vertices(g, length(nodes))\nV(g)$name <- nodes\n\nplot(g, \n     margin = -.4,\n     vertex.size = 4,\n     vertex.label.cex = .5,\n     xlim=c(-1.5, 1.5), ylim=c(-1.5,1.5) \n     )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### EDGES\n\nNow we must establish the relationship between these nodes. Starting with the relationship between our protein hits and experimental variables (Hsp90 mutants). These proteins were found to have a significant change in abundance when at least one mutant Hsp90 is expressed as the sole source of Hsp90.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedges <- data.frame(\n  from = proteomic$Gene,\n  to = proteomic$contrast,\n  LogFC = proteomic$logFC,\n  p = proteomic$P.Value\n  \n)\n\n# Convert edge list to indices\nedges$from <- match(edges$from, nodes)\nedges$to <- match(edges$to, nodes)\n\n# create a list of alternating values from 'from' and 'to' columns\nedge_list <- c(rbind(edges$from, edges$to))\n\ng <- add_edges(g, edges = edge_list)\n\n# Specify edge length based on attribute: LogFC\n\nedge_weights <- abs(edges$LogFC)\nE(g)$weight <- edge_weights\n```\n:::\n\n\n### Default Network\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot the network\nplot(g)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nFigure caption:\n\nNice, we now have the results of our DIA-MS experiments for each mutant 'condition' visualized as a network. However, I think it is safe to say it is garbage and unintelligible as-is. Let's make some conscious design choices to make this at least visually pleasing to the eye. Bonus points if it reveals something cool!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Nodes\nnodes <- unique(c(proteomic$contrast, proteomic$Gene))\n\ng <- make_empty_graph(directed = FALSE)\ng <- add_vertices(g, length(nodes))\n\n# set all vertex labels to an empty string\nV(g)$label <- \"\"\n\n# manually assign labels to the 9 (mutant) nodes\nV(g)$label[1:9] <- nodes[1:9]\n\n# Manually enlarge the mutant nodes\nV(g)$size <- 5\nV(g)[1:9]$size <- 10\n\n# Hide mutant nodes, but leave labels\nV(g)$shape <- \"circle\"\nV(g)$shape[1:9] <- \"none\"\n\n\n# Edges\nedges <- data.frame(\n  from = proteomic$Gene,\n  to = proteomic$contrast,\n  LogFC = proteomic$logFC,\n  p = proteomic$P.Value\n  \n)\n\n# Convert edge list to indices\nedges$from <- match(edges$from, nodes)\nedges$to <- match(edges$to, nodes)\n\n# create a list of alternating values from 'from' and 'to' columns\nedge_list <- c(rbind(edges$from, edges$to))\n\ng <- add_edges(g, edges = edge_list)\n\n# Specify edge length based on attribute: LogFC\n# \"Undo\" the Log (base: 2) so that larger LogFC values have more 'weight'\n# add 10 to all values to help make the network physically smaller.\n\nedge_weights <- abs(edges$LogFC)^2 + 10\nE(g)$weight <- edge_weights\n\n# Plot the network\nset.seed(420)\nplot(g,\n     margin = -.8, # allow the network to use up more of the margin\n     vertex.label.cex = .5,\n     vertex.label.font = 2, # Bold\n     edge_arrow_mode = 0,\n     xlim=c(-1.75, 1.75), ylim=c(-1.75, 1.75) # Increase the plot size to help accommodate the network\n     )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# all vertex shapes, minus \"raster\", that might not be available\nshapes <- setdiff(shapes(), \"\")\ng <- make_ring(length(shapes))\nset.seed(42)\nplot(g, vertex.shape=shapes, vertex.label=shapes, vertex.label.dist=1,\n     vertex.size=15, vertex.size2=15,\n     vertex.pie=lapply(shapes, function(x) if (x==\"pie\") 2:6 else 0),\n     vertex.pie.color=list(heat.colors(5)))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# add new vertex shape, plot nothing with no clipping\nadd_shape(\"nil\")\nplot(g, vertex.shape=\"nil\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}